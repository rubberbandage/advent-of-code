{"version":3,"file":"static/js/631.1d3add52.chunk.js","mappings":"6HAEAA,KAAK,uBAAuB,WACxBC,QAAOC,EAAAA,EAAAA,SAAmB,QAAQC,QAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,IACvDF,QAAOC,EAAAA,EAAAA,SAAmB,QAAQC,QAAQ,CAAC,EAAG,IAC9CF,QAAOC,EAAAA,EAAAA,SAAmB,QAAQC,QAAQ,CAAC,IAC3CF,QAAOC,EAAAA,EAAAA,SAAmB,UAAUC,QAAQ,CAAC,GAAI,GAAI,IACzD,G,6CCIA,UAX2B,SAACC,GACxB,MAAwBA,EAAYC,MAAM,KAAI,eAAvCC,EAAK,KAAEC,EAAM,KAEdC,EAAcC,SAASH,GACvBI,EAAeD,SAASF,GAE9B,OAAOI,MAAMC,KACT,CAACC,OAASH,EAAeF,EAAc,IACvC,SAACM,EAAGC,GAAC,OAAKA,EAAIP,CAAW,GACjC,C","sources":["days/day-4/util/numberGroupToArray.test.ts","days/day-4/util/numberGroupToArray.ts"],"sourcesContent":["import numberGroupToArray from \"./numberGroupToArray\";\n\ntest('numbers to an array', () => {\n    expect(numberGroupToArray('1-5')).toEqual([1, 2, 3, 4, 5])\n    expect(numberGroupToArray('2-3')).toEqual([2, 3])\n    expect(numberGroupToArray('2-2')).toEqual([2])\n    expect(numberGroupToArray('12-14')).toEqual([12, 13, 14])\n})","const numberGroupToArray = (numberGroup: string) => {\n    const [first, second] = numberGroup.split('-');\n\n    const firstNumber = parseInt(first)\n    const secondNumber = parseInt(second)\n\n    return Array.from(\n        {length: (secondNumber - firstNumber + 1)},\n        (v, k) => k + firstNumber)\n}\n\nexport default numberGroupToArray"],"names":["test","expect","numberGroupToArray","toEqual","numberGroup","split","first","second","firstNumber","parseInt","secondNumber","Array","from","length","v","k"],"sourceRoot":""}