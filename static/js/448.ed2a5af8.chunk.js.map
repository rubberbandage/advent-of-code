{"version":3,"file":"static/js/448.ed2a5af8.chunk.js","mappings":"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","sources":["components/Code.tsx","components/TextArea/TextArea.tsx","components/Layout/Layout.tsx","days/day-4/Day4.tsx","days/day-4/d4.ts","days/day-4/util/numberGroupToArray.ts"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport {dark} from 'react-syntax-highlighter/dist/cjs/styles/prism'\n\nconst Code = ({htmlContent}: { htmlContent: string }) => {\n    return <article style={{color: 'white'}}>\n        <ReactMarkdown\n            children={htmlContent}\n            components={{\n                code({node, inline, className, children, style, ...props}) {\n                    const match = /language-(\\w+)/.exec(className || '')\n                    return !inline && match ? (\n                        <SyntaxHighlighter\n                            children={String(children).replace(/\\n$/, '')}\n                            style={dark}\n                            language={match[1]}\n                            PreTag=\"div\"\n                            {...props}\n                        />\n                    ) : (\n                        <code className={className} {...props}>\n                            {children}\n                        </code>\n                    )\n                }\n            }}\n        />\n    </article>\n}\n\nexport default Code;","import React from \"react\";\nimport './TextArea.css';\n\ninterface Props extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n    initialValue: string\n}\n\nconst TextArea = ({onChange, initialValue, ...props}: Props) =>\n    <textarea name=\"paragraph_text\"\n              cols={80}\n              rows={30}\n              onChange={onChange}\n              defaultValue={initialValue}\n              {...props} />\n\nexport {TextArea};","import React, {ChangeEventHandler, PropsWithChildren, useEffect, useState} from \"react\";\nimport Code from \"../Code\";\nimport {TextArea} from \"../TextArea\";\n\ninterface LayoutProps {\n    title: string,\n    markdown?: any;\n    onChange: ChangeEventHandler<HTMLTextAreaElement>;\n    initialValue: string;\n}\n\nconst Layout = ({\n    children,\n    onChange,\n    initialValue,\n    markdown,\n    title\n}: PropsWithChildren<LayoutProps>) => {\n    const [htmlContent, setHtmlContent] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (markdown) {\n            fetch(markdown)\n                .then(response => response.text())\n                .then(text => {\n                    setHtmlContent(text);\n                })\n        }\n    }, [markdown])\n\n    return (\n        <div className=\"container\">\n            <h1>{title}</h1>\n            <TextArea name=\"paragraph_text\" onChange={onChange} initialValue={initialValue}/>\n            {children}\n            { htmlContent && <Code htmlContent={htmlContent} />}\n        </div>\n    );\n}\n\nexport { Layout }\n","import {Layout} from \"../../components/Layout\";\nimport {useDay4} from \"./d4\";\nimport {ChangeEvent} from \"react\";\n\nconst initialValue = `2-4,6-8\n2-3,4-5\n5-7,7-9\n2-8,3-7\n6-6,4-6\n2-6,4-8`;\n\nconst Day4 = () => {\n    const { setCamps, exclusivePairs, partialPairs } = useDay4(initialValue);\n\n    const onChangeTextArea = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        setCamps(event.target.value)\n    }\n\n    return <Layout title={\"Camp Cleanup\"} onChange={onChangeTextArea} initialValue={initialValue}>\n        <p>{exclusivePairs}</p>\n        <p>{partialPairs}</p>\n    </Layout>\n}\n\nexport default Day4;","import {useEffect, useState} from \"react\";\nimport numberGroupToArray from \"./util/numberGroupToArray\";\n\nconst useDay4 = (initialValue: string) => {\n    const [camps, setCamps] = useState<string>(initialValue)\n    const [exclusivePairs, setExclusivePairs] = useState<number>(0)\n    const [partialPairs, setPartialPairs] = useState<number>(0)\n\n    useEffect(() => {\n        const pairs = camps.split(/\\n/);\n\n        const overlaps = pairs.map((line) => {\n            const [elf1 = [], elf2 = []] = line.split(',').map(numberGroupToArray)\n            const hasContent = (elf1.length > 0 && elf2.length > 0)\n            const exclusive = hasContent ? elf1.every((d) => elf2.includes(d)) || elf2.every((d) => elf1.includes(d)) : false;\n            const partial = elf1.some((d) => elf2.includes(d));\n            return { exclusive, partial }\n        })\n\n        setExclusivePairs(overlaps.filter(({ exclusive }) => exclusive).length)\n        setPartialPairs(overlaps.filter(({ partial }) => partial).length)\n    }, [camps])\n\n    return {\n        setCamps, exclusivePairs, partialPairs\n    }\n}\n\nexport {useDay4}","const numberGroupToArray = (numberGroup: string) => {\n    const [first, second] = numberGroup.split('-');\n\n    const firstNumber = parseInt(first)\n    const secondNumber = parseInt(second)\n\n    return Array.from(\n        {length: (secondNumber - firstNumber + 1)},\n        (v, k) => k + firstNumber)\n}\n\nexport default numberGroupToArray"],"names":["htmlContent","style","color","children","components","code","node","inline","className","props","match","exec","String","replace","dark","language","PreTag","TextArea","onChange","initialValue","name","cols","rows","defaultValue","Layout","markdown","title","useState","setHtmlContent","useEffect","fetch","then","response","text","useDay4","setCamps","exclusivePairs","partialPairs","event","target","value","camps","setExclusivePairs","setPartialPairs","overlaps","split","map","line","numberGroupToArray","elf1","elf2","exclusive","length","every","d","includes","partial","some","filter","numberGroup","first","second","firstNumber","parseInt","secondNumber","Array","from","v","k"],"sourceRoot":""}