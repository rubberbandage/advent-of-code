{"version":3,"file":"static/js/296.084eff0b.chunk.js","mappings":"2KAAaA,EAAM,SAAmBC,EAAMC,GACxC,OAAOA,EAAID,EAAIC,EAAID,CACvB,ECCME,EAAW,SAACC,GAA0B,OAAKA,EAAS,uDAAuDC,QAAQD,GAAU,EAAI,CAAE,EAEnIE,EAAU,SAACC,GACb,OAA0CC,EAAAA,EAAAA,UAAiBD,GAAa,eAAjEE,EAAiB,KAAEC,EAAY,KACtC,GAA0BF,EAAAA,EAAAA,YAAkC,eAArDG,EAAK,KAAEC,EAAQ,KACtB,GAAoCJ,EAAAA,EAAAA,YAAoB,eAAjDK,EAAU,KAAEC,EAAa,KAChC,GAAoDN,EAAAA,EAAAA,YAAoB,eAAjEO,EAAuB,KAAEC,EAAgB,KAkChD,OAhCAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAeT,EAAkBU,MAAM,MACxCC,KAAI,SAACC,GACF,IAAMC,EAAeD,EAAEE,UAAU,EAAGF,EAAEG,OAAS,GAAGL,MAAM,IAClDM,EAAeJ,EAAEE,UAAUF,EAAEG,OAAS,GAAGL,MAAM,IACrD,OAAOG,EAAaI,MAAK,SAACtB,GAAM,OAAKqB,EAAaE,SAASvB,EAAO,GACtE,IAEJQ,EAASM,GACT,IAAMU,EAAIV,EAAaE,KAAI,SAAChB,GAAM,OAAKD,EAASC,EAAO,IACvDU,EAAcc,EAClB,GAAG,CAACnB,KAEJQ,EAAAA,EAAAA,YAAU,WAKN,IAJA,IAAMY,EAAoB,GAEpBC,EAAQrB,EAAkBU,MAAM,MAE7BY,EAAI,EAAGA,EAAID,EAAMN,OAAQO,GAAK,EACnCF,EAAMG,KAAKF,EAAMG,MAAMF,EAAGA,EAAI,IAGlC,IAOMH,EAPeC,EAChBT,KAAI,YAA4B,IAAD,eAAzBc,EAAK,KAAEC,EAAK,KAAEC,EAAK,KACtB,OAAKF,GAAUC,GAAUC,EAClBF,EAAMf,MAAM,IACdO,MAAK,SAACtB,GAAM,OAAK+B,EAAMR,SAASvB,IAAWgC,EAAMT,SAASvB,EAAO,IAF/B,EAG3C,IAEmBgB,KAAI,SAAChB,GAAM,OAAKD,EAASC,EAAO,IACvDY,EAAiBY,EACrB,GAAG,CAACnB,IACG,CACHE,MAAAA,EACAE,WAAAA,EACAH,aAAAA,EACA2B,eAAgBtB,GAA2B,IAAIuB,OAAOtC,EAAK,GAC3DuC,iBAAkB1B,GAAc,IAAIyB,OAAOtC,EAAK,GAExD,C","sources":["utils/math.ts","days/day-3/d3.ts"],"sourcesContent":["export const sum = <T extends number>(a: T, b: T) => {\n    return b ? a + b : a;\n};\n","import {useEffect, useState} from \"react\";\nimport {sum} from \"../../utils/math\";\n\nconst priority = (letter: string | undefined) => letter ? 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(letter) + 1 : 0;\n\nconst useDay3 = (initialValue: string) => {\n    const [unparsedRucksacks, setRucksacks] = useState<string>(initialValue)\n    const [types, setTypes] = useState<(string | undefined)[]>()\n    const [priorities, setPriorities] = useState<number[]>()\n    const [threeElfGroupPriorities, setThreeElfGroup] = useState<number[]>()\n\n    useEffect(() => {\n        const commonLetter = unparsedRucksacks.split(/\\n/)\n            .map((s) => {\n                const compartmentA = s.substring(0, s.length / 2).split('')\n                const compartmentB = s.substring(s.length / 2).split('')\n                return compartmentA.find((letter) => compartmentB.includes(letter));\n            });\n\n        setTypes(commonLetter);\n        const p = commonLetter.map((letter) => priority(letter));\n        setPriorities(p);\n    }, [unparsedRucksacks]);\n\n    useEffect(() => {\n        const group: string[][] = [];\n\n        const lines = unparsedRucksacks.split(/\\n/);\n\n        for (let i = 0; i < lines.length; i += 3) {\n            group.push(lines.slice(i, i + 3))\n        }\n\n        const commonLetter = group\n            .map(([line1, line2, line3]) => {\n                if (!line1 || !line2 || !line3) return ''\n                return line1.split('')\n                    .find((letter) => line2.includes(letter) && line3.includes(letter));\n            });\n\n        const p = commonLetter.map((letter) => priority(letter));\n        setThreeElfGroup(p);\n    }, [unparsedRucksacks])\n    return {\n        types,\n        priorities,\n        setRucksacks,\n        threeElfGroup: (threeElfGroupPriorities || []).reduce(sum, 0),\n        sumOfPriorities: (priorities || []).reduce(sum, 0)\n    }\n}\n\nexport {useDay3}"],"names":["sum","a","b","priority","letter","indexOf","useDay3","initialValue","useState","unparsedRucksacks","setRucksacks","types","setTypes","priorities","setPriorities","threeElfGroupPriorities","setThreeElfGroup","useEffect","commonLetter","split","map","s","compartmentA","substring","length","compartmentB","find","includes","p","group","lines","i","push","slice","line1","line2","line3","threeElfGroup","reduce","sumOfPriorities"],"sourceRoot":""}